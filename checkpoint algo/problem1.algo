 //solution 1 (arrays) 
ALGORITHM either-element 
VAR
    tab1, tab2: Array_Of integer 
    i, j, count, sum: integer 
    elt: string 


BEGIN
for i from 0 to tab1.length -1 do 
 for i from 0 to tab2.length -1 do 
    read tab1[i]
    read tab2[i]
End for 

sum :=0
for j from 0 to tab1.length -1 do
  for count from 0 to tab2.length -1 do 
   if tab1[j] <> tab2[count]
    then sum += tab1[j]  AND 
    elt :=  elt.concat ("," tab1[j] )
    end if 
    count ++
    j ++
  End for 

  
for count from 0 to tab2.length -1 do
  for j from 0 to tab1.length -1 do
   if tab1[j] <> tab2[count]
    then sum += tab1[j] AND 
    elt :=  elt.concat ("," tab1[j] )
    end if 
    j ++
 count ++
 end for 
End for 
write (sum)
END

//solution 2 (hash tab )

ALGORITHM hash
VAR
   set_keys : ARRAY_OF INTEGER[40];
   tab1 , tab2 : Array_Of integer[20];
    htab : HASH_TABLE<INTEGER,INTEGER>;
   i, j, count, sum : INTEGER;
  
  
BEGIN
for i from 0 to tab1.length -1 do 
 for i from 0 to tab2.length -1 do 
    read tab1[i]
    read tab2[i]
End for 
 
 FOR i FROM 0 TO tab1.length -1 STEP 1  DO
        IF (htab.lookup(tab1[i]) = TRUE) THEN
            count := hatb.get(tab1[i]);
            htab.insert(tab1[i],count+1);
        ELSE
            htab.insert(tab1[i],1);
        END_IF
    END_FOR

    FOR i FROM 0 TO tab2.length -1 STEP 1  DO
        IF (htab.lookup(tab2[i]) = TRUE) THEN
            count := htab.get(tab2[i]);
            htab.insert(tab2[i],count+1);
        ELSE
            htab.insert(tab2[i],1);
        END_IF
    END_FOR
     
set_keys := dict.getKeys();
    FOR i FROM 0 TO set_keys.length -1 STEP 1  DO
        IF (hash.get(set_keys[i]) = 1) THEN
            sum := sum +set_keys[i];
        END_IF
    END_FOR